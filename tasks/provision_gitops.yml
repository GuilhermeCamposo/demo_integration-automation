---

- name: Check OpenShift GitOps Subscription
  k8s:
    state: present
    kind: Subscription
    api_version: operators.coreos.com/v1alpha1
    definition:
      metadata:
        name: openshift-gitops-operator
        namespace: openshift-operators
      spec:
        channel: stable
        installPlanApproval: Automatic
        name: openshift-gitops-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace

- name: Waiting for GitOps Subscription to complete
  shell: set -o pipefail && oc get csv -n openshift-operators | grep openshift-gitops-operator
  register: install_status
  until: "'Succeeded' in install_status.stdout"
  retries: 20
  delay: 15
  args:
    executable: /bin/bash

- name: Evaluate GitOps Permissions
  k8s:
    state: present
    api_version: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    definition:
      metadata:
        name: edit-0
        namespace: '{{ demo_project }}'
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: edit
      subjects:
      - kind: ServiceAccount
        name: openshift-gitops-argocd-application-controller
        namespace: openshift-gitops

- name: Evaluate salesforce-secret exists
  k8s_info:
    api_version: v1
    kind: Secret
    name: salesforce-secret
    namespace: '{{ demo_project }}'
  register: r_sf_secret

- name: Create salesforce-secret
  command: "oc create secret generic salesforce-secret --from-literal=SF_CLIENT_ID={{ sf_client_id }} --from-literal=SF_CLIENT_SECRET={{ sf_client_secret }} --from-literal=SF_USERNAME={{ sf_username }} --from-literal=SF_PASSWORD={{ sf_password }} --from-literal=SF_INSTANCE={{ sf_instance }} -n {{ demo_project }}"
  when:
   - r_sf_secret.resources | list | length == 0
  ignore_errors: no

- name: Evaluate salesforce-webhook-ingestor GitOps Application
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'argo_ingestor.yml.j2') }}"

- name: Evaluate asana-secret exists
  k8s_info:
    api_version: v1
    kind: Secret
    name: asana-secret
    namespace: '{{ demo_project }}'
  register: r_asana_secret

- name: Create asana-secret
  command: "oc create secret generic asana-secret --from-literal=ASANA_PAT={{ asana_pat }} --from-literal=ASANA_WORKSPACE_GID={{ asana_workspace_gid }} --from-literal=ASANA_PROJECT_GID={{ asana_project_gid }} -n {{ demo_project }}"
  when:
   - r_asana_secret.resources | list | length == 0
  ignore_errors: no

- name: Evaluate asana-adapter GitOps Application
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'argo_asana_adapter.yml.j2') }}"
