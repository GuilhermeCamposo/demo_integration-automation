- name: Evaluate MemberRoll
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: maistra.io/v1
    kind: ServiceMeshMemberRoll
    definition:
      metadata:
        name: default
        namespace: istio-system #control plane project
      spec:
        members:
          # a list of projects joined into the service mesh
          - '{{ demo_project }}'

- name: Evaluate Gateway
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: Gateway
    definition:
      metadata:
        name: rhi-demo-gateway
        namespace: '{{ demo_project }}'
      spec:
        selector:
          istio: ingressgateway # use istio default controller
        servers:
        - port:
            number: 80
            name: http
            protocol: HTTP
          hosts:
          - "*"

- name: Evaluate salesforce-webhook-ingestor DestinationRule
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: DestinationRule
    definition:
      metadata:
        name: salesforce-webhook-ingestor
        namespace: '{{ demo_project }}'
      spec:
        host: salesforce-webhook-ingestor
        subsets:
        - name: v1
          labels:
            version: v1

- name: Evaluate asana-adapter DestinationRule
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: DestinationRule
    definition:
      metadata:
        name: asana-adapter
        namespace: '{{ demo_project }}'
      spec:
        host: asana-adapter
        subsets:
        - name: v1
          labels:
            version: v1


- name: Evaluate salesforce-webhook-ingestor VirtualService
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: VirtualService
    definition:
      metadata:
        name: salesforce-webhook-ingestor
        namespace: '{{ demo_project }}'
      spec:
        hosts:
        - "*"
        gateways:
        - rhi-demo-gateway
        http:
        - match:
          - uri:
              exact: /opportunities
          route:
          - destination:
              host: salesforce-webhook-ingestor
              port:
                number: 8080

- name: Evaluate asana-adapter VirtualService
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: VirtualService
    definition:
      metadata:
        name: asana-adapter
        namespace: '{{ demo_project }}'
      spec:
        hosts:
        - asana-adapter.{{ demo_project }}.svc.cluster.local
        http:
        - name: asana-adapter-v1
          route:
          - destination:
              host: asana-adapter
              port:
                number: 8080

- name: Evaluate salesforce ServiceEntry
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: ServiceEntry
    definition:
      metadata:
        name: salesforce
        namespace: '{{ demo_project }}'
      spec:
        hosts:
        - '{{ sf_instance }}'
        ports:
        - number: 443
          name: https
          protocol: HTTPS
        location: MESH_EXTERNAL
        resolution: DNS

- name: Evaluate asana ServiceEntry
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    api_version: networking.istio.io/v1alpha3
    kind: ServiceEntry
    definition:
      metadata:
        name: asana
        namespace: '{{ demo_project }}'
      spec:
        hosts:
        - app.asana.com
        ports:
        - number: 443
          name: https
          protocol: HTTPS
        location: MESH_EXTERNAL
        resolution: DNS

- name: Evaluate Network Policy
  k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: no
    state: present
    resource_definition: "{{ lookup('template', 'ossm_network_policy.yml.j2') }}"


# - name: Evaluate 3scale ServiceEntry
#   k8s:
#     state: present
#     api_version: networking.istio.io/v1alpha3
#     kind: ServiceEntry
#     definition:
#       metadata:
#         name: 3scale
#         namespace: '{{ demo_project }}'
#       spec:
#         hosts:
#         - 3scale-admin.apps.{{ domain }}
#         ports:
#         - number: 80
#           name: http
#           protocol: HTTP
#         location: MESH_EXTERNAL
#         resolution: DNS
#
# - name: Evaluate 3scale-backend ServiceEntry
#   k8s:
#     state: present
#     api_version: networking.istio.io/v1alpha3
#     kind: ServiceEntry
#     definition:
#       metadata:
#         name: 3scale-backend
#         namespace: '{{ demo_project }}'
#       spec:
#         hosts:
#         - backend-3scale.apps.{{ domain }}
#         ports:
#         - number: 80
#           name: http
#           protocol: HTTP
#         location: MESH_EXTERNAL
#         resolution: DNS
#
# - name: Get 3scale Service
#   uri:
#     url: https://3scale-admin.apps.{{ domain }}/admin/api/services/3/proxy/configs/staging/latest.json
#     validate_certs: false
#     method: GET
#     body:
#       access_token: '{{ threescale_token }}'
#     body_format: form-urlencoded
#     status_code: 200
#   register: r_3scale_service
#
# - name: Set service token
#   set_fact:
#     service_token: '{{ r_3scale_service.json.proxy_config.content.backend_authentication_value }}'
#
# - name: Evaluate ingestor-3scale ServiceMeshExtension
#   k8s:
#     state: present
#     resource_definition: "{{ lookup('template', 'ossm_smextension.yml.j2') }}"
